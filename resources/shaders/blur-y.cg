//Cg
//
//Cg profile arbvp1 arbfp1

void vshader(float4 vtx_position : POSITION, 
             float2 vtx_texcoord0 : TEXCOORD0,
             out float4 l_position : POSITION,
             out float2 l_texcoord0 : TEXCOORD0,
             uniform float4x4 mat_modelproj)
{
  l_position=mul(mat_modelproj, vtx_position);
  l_texcoord0=vtx_texcoord0;
}


void fshader(float2 l_texcoord0 : TEXCOORD0,
             out float4 o_color : COLOR,
             uniform sampler2D t : TEXUNIT0,
             uniform float2 texpix_t)
{
  float offset = texpix_t.y;
  float4 sum = float4(0.0);
 
  sum += tex2D(t, float2(l_texcoord0.x, l_texcoord0.y - 4.0*offset)) * 0.05;
  sum += tex2D(t, float2(l_texcoord0.x, l_texcoord0.y - 3.0*offset)) * 0.09;
  sum += tex2D(t, float2(l_texcoord0.x, l_texcoord0.y - 2.0*offset)) * 0.12;
  sum += tex2D(t, float2(l_texcoord0.x, l_texcoord0.y - offset)) * 0.15;
  sum += tex2D(t, float2(l_texcoord0.x, l_texcoord0.y)) * 0.16;
  sum += tex2D(t, float2(l_texcoord0.x, l_texcoord0.y + offset)) * 0.15;
  sum += tex2D(t, float2(l_texcoord0.x, l_texcoord0.y + 2.0*offset)) * 0.12;
  sum += tex2D(t, float2(l_texcoord0.x, l_texcoord0.y + 3.0*offset)) * 0.09;
  sum += tex2D(t, float2(l_texcoord0.x, l_texcoord0.y + 4.0*offset)) * 0.05;
 
  o_color = sum;
}


